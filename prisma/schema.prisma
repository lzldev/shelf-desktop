generator client {
  provider     = "prisma-kysely"
  output       = "../src/main/db/"
  fileName     = "kysely-types.ts"
  enumFileName = "kysely-enums.ts"
}

datasource db {
  provider = "sqlite"
  url      = "file:migrations/migrations.db.db"
}

model Contents {
  id          Int           @id @default(autoincrement())
  hash        String        @unique
  extension   String
  createdAt   DateTime      @default(now())
  ContentTags ContentTags[]
  Paths       Paths[]

  @@index([hash], map: "contents_hash")
}

model Paths {
  id        Int       @id @default(autoincrement())
  path      String
  mTimeMs   Float
  contentId Int
  Contents  Contents? @relation(fields: [contentId], references: [id], onDelete: Cascade)

  @@index([contentId], map: "paths_content_id")
  @@index([path], map: "paths_path")
}

model Tags {
  id          Int           @id @default(autoincrement())
  name        String
  colorId     Int
  ContentTags ContentTags[]
  TagColors   TagColors?    @relation(fields: [colorId], references: [id])
}

model ContentTags {
  contentId Int
  tagId     Int
  Tags      Tags     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  Contents  Contents @relation(fields: [contentId], references: [id], onDelete: Cascade)

  @@id([contentId, tagId])
  @@index([tagId], map: "content_tags_tag_id")
  @@index([contentId], map: "content_tags_content_id")
}

model TagColors {
  id    Int    @id @default(autoincrement())
  name  String
  color String
  Tags  Tags[]
}
